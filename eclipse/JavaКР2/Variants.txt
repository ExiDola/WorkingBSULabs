V1: //Из стандартного входного потока прочитать текст
//и в стандартный выходной поток вывести все цитаты.
//Цитата — это текст между двойными кавычками
V2: //Программа читает текст из стандартного входного потока, находит слова,
//начинающиеся с заглавной буквы и выводит в стандартный выходной поток
//с новой строки
V3: Создать программу, котоая читает текст из стандартного входного потока,
        разбивает его на предложения и выводит их в стандартный поток по одному
        предложению в строке, переводя все слова Восклицательных предложений
        в верхний регистр.
V4: Стандартный входной поток.
        Найти все вопросительные предложения и вывести каждый с новой строки.*/
V5: найти длинные числа, отсортировать и вывести с номерами строк, в которых они встречались
V6: Найти в тексте слова состоящие из цифр и вывести
V7: Из входного потока прочитать слова.
      Те которые только из цифр преобразовать в 16-ю запись и вывести 1 слово/строку
V8: Слова разделены пробелами.
Все слова в строке которые состоят только из букв отсортировать и сохранять количество пробелов
V9: Из стандартного входного потока считываются строки.
//В каждой строке необходимо переставить слова в обратном порядке.
//Вывести весь текст в стандартный выходной поток
//в тексте в каждом предложении вывести слова в обратном порядке
V10: //Создать программу, которая читает текст из стандартного входного потока
//и печатает в выходной поток предложения исходного текста, в которых встречается фраза,
//указанная как обязательный параметр программы.
V11: со стандартного входного потока прочитать строки и преобразовать следующим образом:
 слова состоят только из букв, все остальное считать разделителями;
 найти все палиндромы, отсортировать в исходной строке;
 остальные слова меняться не должны, разделители должны оставаться
 на местах и количество пробелов оставаться прежним
V12: содержимое стандартного входного потока скопировать в выходной, преобразуя строки входного файла следующим образом:
 * каждая входная строка состоит из слов, разделенных одним или несколькими пробелами.
 * Переставить в ней слова, состоящие только из цифр так, чтобы они были упорядочены по возрастанию суммы их цифр.
 * При этом другие слова должны оставаться на месте, количество пробелов должно оставаться таким же, как и в исходной строке.
V13: заменить в строке 8 пробелов стоящих подряд на символ табуляции
V14: Ввести через стандартный поток текст,
найти слово максимальной длины и вывести слово и сколько раз встречается
V15: найти длинные числа, отсортировать и вывести с номерами строк, в которых они встречались
V16_1: Вводится строка. Задача: посчитать выражение, состоящее из целых, действительных чисел.
//операции + - * /
//если выражение некорректно, то вывести "?"
//если всё ок, то вывести результат
//присутствие лишних пробелов допустимо в исходных данных…
V16_2: // * содержимое стандартного входного потока скопировать в выходной, преобразуя строки входного файла следующим образом:
// * каждая входная строка состоит из слов, разделенных одним или несколькими пробелами.
// * Переставить в ней слова, состоящие только из букв так, чтобы они были упорядочены по алфавиту.
// * При этом другие слова должны оставаться на месте, количество пробелов должно оставаться таким же, как и в исходной строке.
V17: //считать с консоли размерность n матрицы.
//Матрицу заполнить рандомными числами из диапазона от -n до n.
//Транспонировать матрицу и вывести результат
V18: // Из стандартного входного потока прочитать текст.
//Разделители - пробелы(один или несколько) и знак табуляции.
//В выходной поток:
//1) преобразовать строки таким образом, чтобы их длина не была больше 80, при этом нельзя "херачить слова"
//2) заменить \t на пробелы(без учёта позиционного табулирования)
//3) заменить несколько пробелов на один
//4) удалить пробелы:
//* в начале строки
//* в конце строки
//* перед знаками препинания
V20: В следующих заданиях выполнить соответствующий рисунок в окне апплета:
1. Создать классы Point и Line. Объявить массив из n объектов класса Point.
Для объекта класса Line определить какие из объектов Point лежат на одной стороне
от прямой линии и какие - на другой. Реализовать ввод данных для объекта Line и
случайное задание данных для объектов Point.
V21: Изобразить в окне апплета гармонические колебания точки вдоль некоторого
горизонтального отрезка. Если длина отрезка равна q, то расстояние от точки до левого
конца в момент времени t можно считать равным q(1+cos(wt))/2, где w - некоторая константа
Указанные величины вводятся через параметры апплета.
V22: Задача с параболой
V23: Есть фраза, переданная через параметры апплета. 
Сделать так, чтобы она собиралась в центре апплета по буквам, которые двигаются 
из 4 углов по очереди
V24: Cоздать апплет со строкой, которая движется горизонтально,
отражаясь от границ апплета и меняя при этом свой цвет на цвет.
Строка вводится через параметры апплета.
V25: прочитать все данные с входного потока, разделить на слов,
выделить лексемы Java,представляющие собой дробные числа(float) со знаком.
Хранить эти значения с номерами входных строк. Вывести, предварительно отсортировав
в порядке убывания значений.
Слова разделены пробелами. Найти знаковые литералы float и вывести в убывающей порядке с номером строки, в которой встречаются
V20_1: В окне апплета по горизонтали двигается окружность, отражаясь от границ апплета.
Да не просто отражается, а происходит упругое столкновение.
ЧисловойРяд: считать дисперсию, выборочное среднее и прочие вкусняшки
loman: задание с ломанной